version: 2.1 

commands:
  # Run tests under NextflowSerotypingPipeline/test_isolates/jobs/ and store artifacts
  run-test:
    parameters:
      script:
        description: This test calls 'bash -e test_isolates/jobs/<< script >>'
        type: string

    steps:
      - checkout
      - run:
          no_output_timeout: 30m
          command: |
            cd /root/NextflowSerotypingPipeline/
            mkdir $HOME/WGS_Data/TestIsolates/ $HOME/WGS_Results/TestIsolates/ /artifacts/
            bash -e test_isolates/jobs/<< parameters.script >>
          
      - store_artifacts:
          path: /artifacts/

      - store_artifacts:
          path: /root/WGS_Data/

      - store_artifacts:
          path: /root/WGS_Results/

      - store_artifacts:
          path: /root/NextflowSerotypingPipeline/

  build-and-push:
    parameters:
      tag:
        description: Tag to push built docker image to
        type: string

    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=$CIRCLE_BRANCH
          docker build -t $DOCKER_USER/salmonella-seq:$TAG -f ./docker/Dockerfile .
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker push $DOCKER_USER/salmonella-seq:$TAG
          
# Executor that runs tests in the image produced by the build step
executors:
  nf-pipeline:
    docker:
      - image: "$DOCKER_USER/salmonella-seq:$CIRCLE_BRANCH"

  nf-machine:
    machine:
      image: ubuntu-1604:202007-01

# Run tests under NextflowSerotypingPipeline/test_isolates/jobs/ and store artifacts
jobs:
  # Docker image containing the nextflow pipeline $CIRCLE_BRANCH
  build:
    docker:
      # Circleci base ubuntu image
      - image: &build_img cimg/base:2020.01
      
    steps:
      - build-and-push:
          tag: $CIRCLE_BRANCH

  deploy: 
    docker:
      # Circleci base ubuntu image
      - image: *build_img

    steps:
      - build-and-push:
          tag: latest

  # Docker image containing the nextflow pipeline $CIRCLE_BRANCH
  test_isolates:
    executor: nf-machine
    steps:
      - checkout
      - run:
          no_output_timeout: 30m
          command: |
            docker run -m="7g" --memory-swap="12g" "$DOCKER_USER/salmonella-seq:$CIRCLE_BRANCH"  $HOME/nextflow/nextflow run $HOME/nextflow/SCE3_pipeline_update.nf

  inclusivity:
    executor: nf-pipeline        
    parameters:
      case:
        type: string
    steps:
      - run-test:
          script: "inclusivity.bash << parameters.case >>"
          
# Orchestrates the validation tests 
workflows:
  validation:
    jobs:
      - build
            
      - inclusivity:
           requires:
             - build
           matrix:
             parameters:
               case: ["0", "1", "2", "3"]      
