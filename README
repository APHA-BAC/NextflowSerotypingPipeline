1) Installing and running Nextflow:
- create a new directory (e.g. called nextflow) in your /home directory (e.g. /home/jaromirguzinski/nextflow - where jaromirguzinski can be replaced by the general designation $USER)
- cd into /nextflow and follow the instructions here https://www.nextflow.io/ (Nextflow homepage)
- copy the command curl -s https://get.nextflow.io | bash from the Nextflow homepage and paste it into the terminal
- the script should only need less than a minute to run, and when finished a shell script file called nextflow will appear in the /nextflow directory
- test if the Nextflow installation has completed without any errors by pasting the ./nextflow run hello command into the terminal

- it is recommended to keep the Nextflow script files (Nextflow serotyping pipeline script with the extension .nf) in the same directory as the nextflow shell script
- thus if the Nextflow script file is called pipeline.nf, this can be launched from the /home/jaromirguzinski/nextflow directory using the ./nextflow run pipeline_disk.nf command
- after launching the Nextflow script, a new directory called work will appear in /home/$USER/nextflow
- work will be continously updated while the Nextflow script is running and some output files as well as temporary files will be saved there

2) Installing pipeline component software
- FastQC (https://www.bioinformatics.babraham.ac.uk/projects/fastqc/)
Download the zip file from here: http://www.bioinformatics.babraham.ac.uk/projects/download.html#fastqc and follow the instructions: https://raw.githubusercontent.com/s-andrews/FastQC/master/INSTALL.txt to install
If the install has been performed correctly, the "fastqc" command will be sufficient to launch this Nextflow serotyping pipeline process 

- shovill (https://github.com/tseemann/shovill)
Use conda to install shovill and all dependencies: conda install -c conda-forge -c bioconda -c defaults shovill
If the install has been performed correctly, the "shovill" command will be sufficient to launch this Nextflow serotyping pipeline process 

- quast (http://quast.sourceforge.net/quast.html)
Seems it is easiest to download quast by using the command: tar -xzf quast-<VERSION>.tar.gz
Download and then unpack the tar.gz file into a directory in your /home, for example: /home/$USER/quast-5.0.2 
To launch this Nextflow serotyping pipeline process, use the command: python /home/$USER/quast-5.0.2/quast.py to provide the path to the quast.py Python file 

- KmerID (https://github.com/phe-bioinformatics/kmerid)
Unpack the tar.gz archive that was downloaded into a newly created directory in your /home (for example: /home/$USER/kmerid)
Compile the auxilliary executables by typing "make all" when in the /home/$USER/kmerid directory
Replace the Python 2 compatible kmerid.py file that came with the original installation with the edited Python 3 compatible kmerid_python3.py file (in this repo)
Important: open the kmerid_python3.py file and if necessary edit the lines of code with the text intersect_kmer_lists_filelist (line 97, line 144, line 195) and kmer_reads_process_stdin (line 82), and make sure that there is specified the full path to the /bin directory where these files are located (thus for example: "/home/$USER/kmerid/bin/intersect_kmer_lists_filelist")
Check that the KmerID reference genome files correspond to the bacterial genera against which the analysed samples ought to be compared, and edit the /home/$USER/kmerid/config/config.cnf file as needed 

- MOST



- SeqSero2 
- sistr
conda install sistr_cmd (https://github.com/phac-nml/sistr_cmd)
- srst2


3) Instructions for running the Nextflow serotyping pipeline in SCEv2
- no disk but running straight from /home/$USER/WGS_Data (??) 


4) Instructions for running the Nextflow serotyping pipeline in SCEv3
- the assumption is that the R1 and R2 fastq files for all of the isolates to be serotyped will be stored during the pipeline run on an external hard disk that will be mounted onto a directory called /disk
- thus the path to access the external hard disk should be /home/$USER/disk 
- after entering the /disk directory, two directories need to be created there: /WGS_Data and /WGS_Results
- additionally, in the /WGS_Data directory it will be necesseary to create a directory named (for example) after the sequencing run to be analysed: for example /home/$USER/disk/WGS_Data/run_n900  
- the /WGS_Data/sequencing_run_name directory must contain the R1 and R2 fastq files for all isolates to be analysed in the Nextflow pipeline run 
- the /WGS_Results is a directory where the serotyping pipeline output files will be written out to: /home/$USER/disk/WGS_Results
- prior to launching the Nextlow pipeline script it needs to be made sure that there is sequencing data in the /home/$USER/WGS_Data/sequencing_run_name directory, that the /home/$USER/disk/WGS_Results directory is empty, and the previous run's /work directory has been deleted from /home/$USER/nextflow 
- enter the /home/$USER/nextflow directory and launch the Nextflow pipeline script (./nextflow run SCE3_pipeline_disk.nf)
- several seconds will pass while the script is launching and the message "Please enter the name of directory where the sequences are located:" will appear in the terminal
- after the appearance of the message use the keyboard to enter the sequencing_run_name on the same line as the message in the terminal
- the Nextflow serotyping pipeline will start running and all the pipeline component software processes will be 100% finalized upon the successful completetion of the pipeline 



- summary.py scipt update the path with disk




